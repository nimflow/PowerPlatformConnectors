{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Nimflow",
    "description": "The Nimflow Web API enables the execution of actions on cases and tasks, and facilitates subscription to events via standard webhooks.",
    "version": "7.0.0",
    "contact": {
      "name": "Nimflow",
      "url": "https://nimflow.com",
      "email": "support@nimflow.com"
    }
  },
  "host": "api.nimflow.com",
  "schemes": ["https"],
  "paths": {
    "/environment/cases": {
      "get": {
        "tags": ["Cases"],
        "summary": "Retrieve cases using search criteria.",
        "description": "Search for cases by specifying common fields such as CaseTypeName, Status, Reference, etc. Supports pagination with Skip and Take parameters to control the number of results.",
        "operationId": "SearchCases",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "CaseTypeName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Status",
            "in": "query",
            "x-schema": {
              "$ref": "#/definitions/CaseStatus"
            },
            "x-nullable": true,
            "enum": ["Open", "Finalized", "Cancelled", "Terminated"]
          },
          {
            "type": "string",
            "name": "Reference",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "ExcludeCaseTypeVersion",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Skip",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Take",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseInfo"
              }
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/cases/{caseTypeName}/{reference}/{action}": {
      "post": {
        "tags": ["Cases"],
        "summary": "Perform an action on a specific case.",
        "description": "Execute a specified action on an existing case identified by caseTypeName and reference, or create a new case if it doesn't exist.",
        "operationId": "ExecuteCaseAction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "caseTypeName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "reference",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "action",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {},
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CaseInfo"
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/cases/when-case-event/{hookId}": {
      "get": {
        "tags": ["Cases"],
        "summary": "Get details of a case event webhook by ID.",
        "description": "Retrieve the configuration and details of a specific case event webhook using its unique hookId.",
        "operationId": "GetCaseWebhook",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "hookId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CaseWebhookEntity"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      },
      "delete": {
        "tags": ["Cases"],
        "summary": "Remove a case event webhook.",
        "description": "Delete a specific case event webhook identified by hookId to stop receiving notifications for the related events.",
        "operationId": "DeleteCaseWebhook",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "environmentId",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "hookId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/environment/cases/when-case-event": {
      "x-ms-notification-content": {
        "description": "Subscribe to CaseEventWebhookPayload event.",
        "schema": {
          "$ref": "#/definitions/CaseEventWebhookPayload"
        }
      },
      "post": {
        "tags": ["Cases"],
        "summary": "Create a webhook for case events.",
        "description": "Subscribe to case events by creating a webhook. This webhook will notify the specified callback URL whenever the subscribed events occur.",
        "operationId": "WhenCase",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCaseWebhookRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ],
        "x-ms-trigger": "single"
      }
    },
    "/environment/case-tasks": {
      "get": {
        "tags": ["Case Tasks"],
        "summary": "Find tasks associated with cases.",
        "description": "Search for tasks linked to cases by using fields like CaseTypeName, CaseReference, TaskType, and various status parameters. Supports filtering and pagination.",
        "operationId": "SearchCaseTasks",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "CaseTypeName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "CaseReference",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "TaskType",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "CaseStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/definitions/CaseStatus"
            },
            "x-nullable": true,
            "enum": ["Open", "Finalized", "Cancelled", "Terminated"]
          },
          {
            "type": "string",
            "name": "TaskStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/definitions/CaseTaskStatus"
            },
            "x-nullable": true,
            "enum": ["Active", "Completed", "Cancelled"]
          },
          {
            "type": "integer",
            "name": "Skip",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Take",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseTaskInfo"
              }
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/{caseId}/{taskType}": {
      "get": {
        "tags": ["Case Tasks"],
        "summary": "Retrieve a specific task in a case.",
        "description": "Fetch details of an active task associated with a specific case, identified by caseId and taskType.",
        "operationId": "GetCaseTaskRouteName",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "caseId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "taskType",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CaseTaskInfo"
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/{caseId}/{taskType}/{action}": {
      "post": {
        "tags": ["Case Tasks"],
        "summary": "Perform an action on a case task.",
        "description": "Execute a defined action on an active task within a case. The action is specified using caseId, taskType, and action parameters.",
        "operationId": "ExecuteTaskAction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "caseId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "taskType",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "action",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {},
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/{caseId}/{taskType}/activity-events/{eventName}": {
      "post": {
        "tags": ["Case Tasks"],
        "summary": "Log an activity event for a task.",
        "description": "Register an event indicating activity on a task, including details like agentId, processId, sessionId, and a timestamp.",
        "operationId": "RegisterCaseTaskActivityEvent",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "caseId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "taskType",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "eventName",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterCaseTaskActivityEventRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/claim": {
      "post": {
        "tags": ["Case Tasks"],
        "summary": "Claim tasks to work on them.",
        "description": "Claim a specified number of tasks that are currently active. Optionally, filter tasks based on criteria such as task type, and claim only those unclaimed for a certain duration.",
        "operationId": "ClaimActiveCaseTasks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimActiveTasksRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseTaskInfo"
              }
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/release": {
      "post": {
        "tags": ["Case Tasks"],
        "summary": "Release a claimed task back to the queue.",
        "description": "Release a task that was previously claimed, making it available for others to claim and work on. Requires details like caseId and taskType.",
        "operationId": "ReleaseCaseTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseCaseTaskRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      }
    },
    "/environment/case-tasks/when-case-task-event": {
      "x-ms-notification-content": {
        "description": "Subscribe to CaseTaskEventWebhookPayload event.",
        "schema": {
          "$ref": "#/definitions/CaseTaskEventWebhookPayload"
        }
      },
      "post": {
        "tags": ["Case Tasks"],
        "summary": "Create a webhook for task events.",
        "description": "Subscribe to specific case task events by creating a webhook. This will trigger notifications to the specified callback URL when the events occur.",
        "operationId": "WhenCaseTask",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCaseTaskWebhookRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ],
        "x-ms-trigger": "single"
      }
    },
    "/environment/case-tasks/when-case-task-event/{hookId}": {
      "get": {
        "tags": ["Case Tasks"],
        "summary": "Get details of a case task webhook by ID.",
        "description": "Retrieve the configuration and details of a specific task event webhook using its unique hookId.",
        "operationId": "GetCaseTaskWebhook",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "environmentId",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "hookId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CaseTaskWebhookEntity"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "apiKey-auth": []
          }
        ]
      },
      "delete": {
        "tags": ["Case Tasks"],
        "summary": "Remove a case task event webhook.",
        "description": "Delete a case task event webhook.",
        "operationId": "DeleteCaseTaskWebhookRoute",
        "produces": ["application/json"],
        "parameters": [
          {
            "type": "string",
            "name": "environmentId",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "hookId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "CaseInfo": {
      "type": "object",
      "required": ["id", "reference", "caseTypeName", "caseTypeVersion"],
      "properties": {
        "id": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "caseTypeName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/CaseStatus"
        },
        "recalculateOn": {
          "type": "string",
          "format": "date-time"
        },
        "caseTypeVersion": {
          "type": "integer",
          "format": "int32"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseTaskInfo"
          }
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseEventInfo"
          }
        },
        "actionRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseActionRequestInfo"
          }
        }
      }
    },
    "CaseStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": ["Open", "Finalized", "Cancelled", "Terminated"],
      "enum": ["Open", "Finalized", "Cancelled", "Terminated"]
    },
    "CaseTaskInfo": {
      "type": "object",
      "required": ["taskType", "caseId", "status"],
      "properties": {
        "description": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "data": {},
        "caseId": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/CaseTaskStatus"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseTaskEventInfo"
          }
        },
        "activityEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseTaskActivityEventInfo"
          }
        }
      }
    },
    "CaseTaskStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": ["Active", "Completed", "Cancelled"],
      "enum": ["Active", "Completed", "Cancelled"]
    },
    "CaseTaskEventInfo": {
      "type": "object",
      "required": ["taskType", "timestamp", "event"],
      "properties": {
        "taskType": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "$ref": "#/definitions/CaseTaskEvent"
        }
      }
    },
    "CaseTaskEvent": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Created",
        "Completed",
        "Reactivated",
        "Cancelled",
        "Modified"
      ],
      "enum": ["Created", "Completed", "Reactivated", "Cancelled", "Modified"]
    },
    "CaseTaskActivityEventInfo": {
      "type": "object",
      "required": ["taskType", "timestamp", "event"],
      "properties": {
        "taskType": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        },
        "processId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "CaseEventInfo": {
      "type": "object",
      "required": ["timestamp", "event"],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "$ref": "#/definitions/CaseEvent"
        }
      }
    },
    "CaseEvent": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Opened",
        "Finalized",
        "Reopened",
        "Cancelled",
        "Terminated"
      ],
      "enum": ["Opened", "Finalized", "Reopened", "Cancelled", "Terminated"]
    },
    "CaseActionRequestInfo": {
      "type": "object",
      "required": ["timestamp", "action"],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "action": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "payload": {}
      }
    },
    "CaseWebhookEntity": {
      "type": "object",
      "required": ["id", "url", "events"],
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 26,
          "minLength": 26
        },
        "caseTypeName": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "minLength": 1
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseEvent"
          }
        }
      }
    },
    "CreateCaseWebhookRequest": {
      "type": "object",
      "required": ["callbackUrl"],
      "properties": {
        "callbackUrl": {
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "caseTypeName": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseEvent"
          }
        }
      }
    },
    "CaseEventWebhookPayload": {
      "type": "object",
      "required": ["case", "event"],
      "properties": {
        "case": {
          "$ref": "#/definitions/CaseInfo"
        },
        "event": {
          "$ref": "#/definitions/CaseEventInfo"
        }
      }
    },
    "RegisterCaseTaskActivityEventRequest": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string"
        },
        "processId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "durationInSeconds": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClaimActiveTasksRequest": {
      "type": "object",
      "required": ["taskType", "unclaimedWithinSeconds", "take"],
      "properties": {
        "caseTypeName": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        },
        "processId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "unclaimedWithinSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "take": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleaseCaseTaskRequest": {
      "type": "object",
      "required": ["caseId", "taskType"],
      "properties": {
        "caseId": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        },
        "processId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateCaseTaskWebhookRequest": {
      "type": "object",
      "required": ["callbackUrl"],
      "properties": {
        "callbackUrl": {
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        },
        "caseTypeName": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseTaskEvent"
          }
        }
      }
    },
    "CaseTaskEventWebhookPayload": {
      "type": "object",
      "required": ["task", "event"],
      "properties": {
        "task": {
          "$ref": "#/definitions/CaseTaskInfo"
        },
        "event": {
          "$ref": "#/definitions/CaseTaskEventInfo"
        }
      }
    },
    "CaseTaskWebhookEntity": {
      "type": "object",
      "required": ["id", "url", "events"],
      "properties": {
        "id": {
          "type": "string",
          "maxLength": 26,
          "minLength": 26
        },
        "caseTypeName": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "minLength": 1
        },
        "taskType": {
          "type": "string",
          "maxLength": 60
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseTaskEvent"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey-auth": {
      "type": "apiKey",
      "description": "API key used in the Authorization header.",
      "name": "apiKey",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey-auth": []
    }
  ],
  "basePath": "/",
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.nimflow.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.nimflow.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}
